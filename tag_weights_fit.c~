#include <TH2.h>
#include <TTree.h>
#include <TFile.h>
#include <TSystemFile.h>
#include <TSystemDirectory.h>
#include <TCanvas.h>
#include <TStyle.h>
#include <TLegend.h>
#include <TPad.h>
#include <TMath.h>

#include <iostream>
#include <sstream>
#include <vector>
using namespace std;


// ##################################
// ## Split string into components ##
// ##################################
vector<TString> split(TString split_string, char delimiter)
{
  stringstream ss;
  ss << split_string;
  string component;

  vector<TString> container;
  while(getline(ss, component, delimiter))
    {
      container.push_back(component);
    }

  return container;
}


// #################################################
// ## Make a list of files in the given directory ##
// #################################################
vector<TString> get_list_of_files(TString dirname, vector<TString> container = {})
{
  TSystemDirectory dir(dirname, dirname);
  TList *files = dir.GetListOfFiles();
  if (files)
    {
      TSystemFile *file;
      TString fname;
      TIter next(files);
      while ((file=(TSystemFile*)next()))
        {
          fname = file->GetName();
          if (fname != "." && fname != "..")
            {
              if (fname.EndsWith(".root")) { container.push_back(dirname + fname); }
              else { container.push_back(dirname + fname + "/"); }
            }
        }
    }
  return container;
}


// ##############
// ##   MAIN   ##
// ##############
void tag_weights_fit()
{
  path_to_ntuples = "/eos/user/e/eantipov/Files/tt_hf/";
  vector<TString> dir_paths = get_list_of_files(path_to_ntuples);
  
  TH1 *DL1r_tag0_hist = new TH1f("DL1r_1st_tag", "DL1r_1st_tag", 30, -15, 15);
  TH1 *DL1r_tag1_hist = new TH1f("DL1r_2nd_tag", "DL1r_2nd_tag", 30, -15, 15);
  TH1 *DL1r_tag2_hist = new TH1f("DL1r_3rd_tag", "DL1r_3rd_tag", 30, -15, 15);

}
